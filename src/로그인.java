    import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import javax.swing.JOptionPane;
import java.util.Date;
import java.util.Locale;
import javax.swing.table.DefaultTableModel;
import java.security.MessageDigest;
import java.security.SecureRandom;
import java.security.NoSuchAlgorithmException;
import javax.crypto.*;
import javax.crypto.spec.*;
import java.io.*;
import java.math.BigInteger;
import java.util.Base64;
import java.util.Random;
import javax.swing.ImageIcon;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author User
 */
 

    
    
    
public class 로그인 extends javax.swing.JFrame {
 DB_MAN DBM = new DB_MAN();
 Date now = new Date();
 SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
 SimpleDateFormat sdf2 = new SimpleDateFormat("E요일", Locale.KOREAN);
 Calendar c1 = Calendar.getInstance();
 String strToday = sdf.format(c1.getTime());
 String yoil = sdf2.format(now);
 
 LocalTime nowtime = LocalTime.now();
 DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss");
 String formatedNow = nowtime.format(formatter);
 
  Random r = new Random();
  String[] num = {"1","2","3","4"};
  int i = r.nextInt(3); // 1번 호랑이, 2번 기린, 3번이 기차, 4번 자동차
 
    /**
     * Creates new form NewJFrame
     */
    public 로그인() {
        initComponents();
        answerinput.setVisible(false);
        humansubmit.setVisible(false);
    }
    
    
    
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JoinFrame = new javax.swing.JFrame();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        userID1 = new javax.swing.JTextField();
        userName1 = new javax.swing.JTextField();
        password1 = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        btnjoinAction = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        userBirth = new javax.swing.JTextField();
        userJob = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        hell = new javax.swing.JFrame();
        stunum = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        stubirth = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        studept = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        nowdate = new javax.swing.JTextField();
        nowtime1 = new javax.swing.JTextField();
        btnstart = new javax.swing.JButton();
        btnstop = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        total = new javax.swing.JTable();
        retime = new javax.swing.JButton();
        btnlogout = new javax.swing.JButton();
        human = new javax.swing.JFrame();
        humancheckbtn = new javax.swing.JButton();
        humanchkimage = new javax.swing.JLabel();
        answerinput = new javax.swing.JTextField();
        humansubmit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        userID = new javax.swing.JTextField();
        btnok = new javax.swing.JButton();
        btnjoin = new javax.swing.JButton();
        password = new javax.swing.JPasswordField();

        JoinFrame.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel5.setText("사용자 ID");
        jLabel5.setToolTipText("");

        jLabel6.setText("성명");

        jLabel7.setText("비밀번호");

        jLabel8.setFont(new java.awt.Font("맑은 고딕", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 255));
        jLabel8.setText("회원가입");

        btnjoinAction.setText("회원가입");
        btnjoinAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnjoinActionActionPerformed(evt);
            }
        });

        jLabel9.setText("생년월일");
        jLabel9.setToolTipText("");

        jLabel10.setText("소속");

        userJob.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "컴퓨터정보과", "건축학과", "서비스학과", " " }));

        jLabel11.setText("ex) 991224");
        jLabel11.setToolTipText("");

        javax.swing.GroupLayout JoinFrameLayout = new javax.swing.GroupLayout(JoinFrame.getContentPane());
        JoinFrame.getContentPane().setLayout(JoinFrameLayout);
        JoinFrameLayout.setHorizontalGroup(
            JoinFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JoinFrameLayout.createSequentialGroup()
                .addGroup(JoinFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JoinFrameLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JoinFrameLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(JoinFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(JoinFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userJob, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(JoinFrameLayout.createSequentialGroup()
                                .addComponent(userBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11)
                                .addGap(0, 55, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JoinFrameLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(JoinFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(JoinFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userID1)
                            .addComponent(userName1)
                            .addComponent(password1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JoinFrameLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnjoinAction)))
                .addContainerGap())
        );
        JoinFrameLayout.setVerticalGroup(
            JoinFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JoinFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(JoinFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(userID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JoinFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(userName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JoinFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(password1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JoinFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(userBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JoinFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(userJob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnjoinAction)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        hell.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        stunum.setPreferredSize(new java.awt.Dimension(70, 20));

        jLabel12.setText("학번");

        stubirth.setPreferredSize(new java.awt.Dimension(70, 20));

        jLabel13.setText("생년월일");

        name.setPreferredSize(new java.awt.Dimension(70, 20));

        jLabel15.setText("성명");

        studept.setPreferredSize(new java.awt.Dimension(70, 20));

        jLabel16.setText("소속");

        jLabel17.setText("현재(일)시간");

        nowdate.setPreferredSize(new java.awt.Dimension(70, 20));

        nowtime1.setPreferredSize(new java.awt.Dimension(70, 20));

        btnstart.setText("출근등록");
        btnstart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnstartActionPerformed(evt);
            }
        });

        btnstop.setText("퇴근등록");
        btnstop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnstopActionPerformed(evt);
            }
        });

        total.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "소속명", "성명", "근태일", "요일", "출근시간", "퇴근시간", "근무시간(최대7)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(total);

        retime.setText("시간 새로고침");
        retime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retimeActionPerformed(evt);
            }
        });

        btnlogout.setText("로그아웃");
        btnlogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout hellLayout = new javax.swing.GroupLayout(hell.getContentPane());
        hell.getContentPane().setLayout(hellLayout);
        hellLayout.setHorizontalGroup(
            hellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hellLayout.createSequentialGroup()
                .addGroup(hellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(hellLayout.createSequentialGroup()
                        .addGroup(hellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(hellLayout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addGroup(hellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(hellLayout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(stunum, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(hellLayout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(hellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(hellLayout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(studept, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(hellLayout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(stubirth, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(hellLayout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jLabel17)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hellLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(hellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(retime)
                            .addGroup(hellLayout.createSequentialGroup()
                                .addComponent(nowdate, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(nowtime1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 182, Short.MAX_VALUE)
                        .addComponent(btnstart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnstop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnlogout)))
                .addContainerGap())
        );
        hellLayout.setVerticalGroup(
            hellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hellLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(hellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(hellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(hellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addComponent(stunum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(stubirth, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(hellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(studept, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(26, 26, 26)
                .addGroup(hellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(retime))
                .addGap(18, 18, 18)
                .addGroup(hellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nowdate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nowtime1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnstart)
                    .addComponent(btnstop)
                    .addComponent(btnlogout))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        human.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        humancheckbtn.setText("사람입니까?");
        humancheckbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                humancheckbtn(evt);
            }
        });

        humansubmit.setText("제출");
        humansubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit(evt);
            }
        });

        javax.swing.GroupLayout humanLayout = new javax.swing.GroupLayout(human.getContentPane());
        human.getContentPane().setLayout(humanLayout);
        humanLayout.setHorizontalGroup(
            humanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(humanLayout.createSequentialGroup()
                .addGroup(humanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(answerinput, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(humanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(humanLayout.createSequentialGroup()
                            .addGap(230, 230, 230)
                            .addComponent(humanchkimage))
                        .addGroup(humanLayout.createSequentialGroup()
                            .addGap(202, 202, 202)
                            .addComponent(humancheckbtn))))
                .addGap(18, 18, 18)
                .addComponent(humansubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
        );
        humanLayout.setVerticalGroup(
            humanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, humanLayout.createSequentialGroup()
                .addContainerGap(140, Short.MAX_VALUE)
                .addComponent(humanchkimage)
                .addGap(110, 110, 110)
                .addComponent(humancheckbtn)
                .addGap(18, 18, 18)
                .addGroup(humanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(answerinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(humansubmit))
                .addGap(57, 57, 57))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("맑은 고딕", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("로그인");

        jLabel2.setText("사용자 ID");
        jLabel2.setToolTipText("");

        jLabel4.setText("비밀번호");

        btnok.setText("확인");
        btnok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnokActionPerformed(evt);
            }
        });

        btnjoin.setText("회원가입");
        btnjoin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnjoinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userID)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnok)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                                .addComponent(btnjoin))
                            .addComponent(password, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(userID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnok)
                    .addComponent(btnjoin))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // 테이블에 값 뿌려주기
    public final void getDBData(String strQuery){
        int iCntRow= 0;
        try{
            DBM.DB_rs = DBM.DB_stmt.executeQuery(strQuery);
            while(DBM.DB_rs.next()){
                total.setValueAt(DBM.DB_rs.getString("userJob"), iCntRow, 0);
                total.setValueAt(DBM.DB_rs.getString("userName"), iCntRow, 1);
                total.setValueAt(DBM.DB_rs.getString("workDate"), iCntRow, 2);
                total.setValueAt(DBM.DB_rs.getString("yoil"), iCntRow, 3);
                total.setValueAt(DBM.DB_rs.getString("startTime"), iCntRow, 4);
                total.setValueAt(DBM.DB_rs.getString("endTime"), iCntRow, 5);
                total.setValueAt(DBM.DB_rs.getString("workTime"), iCntRow, 6);
                iCntRow++;
            }
            DBM.DB_rs.close();
        }catch (Exception e){
            System.out.println("SQLException : " + e.getMessage());
        }
    }
    
    public String checkDate(String nowdate){
        String sql = "select * from work where userID = " + stunum.getText();
        try{
        DBM.dbOpen();
        DBM.DB_rs = DBM.DB_stmt.executeQuery(sql); 
        while(DBM.DB_rs.next()){
            if(DBM.DB_rs.getString("workDate").equals(nowdate)){
                return DBM.DB_rs.getString("startTime");
            }
        }
        }catch(Exception e){
            System.out.println("SQLException : "+e.getMessage());
        }
       return "no";
    }
    
    
    
    //로그인 버튼 눌렀을 때 발생하는 함수
    private void btnokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnokActionPerformed
  
        try{      
            String sql = "select * from user";
            DBM.dbOpen();
            String id = userID.getText();
            String pass = new String(password.getPassword());
            int chk = 0;
            
            if(userID.getText().isEmpty() ||  pass.isEmpty()){
                JOptionPane.showMessageDialog(null, "입력칸을 확인해주세요.");
            }else{
                DBM.DB_rs = DBM.DB_stmt.executeQuery(sql);   
                while(DBM.DB_rs.next()){
                    if(id.equals(DBM.DB_rs.getString("userid"))){
                        chk = 1;
                        String pw_decrypt = SHA512(pass);
                        if(pw_decrypt.equals(DBM.DB_rs.getString("userPassword"))){
                            JOptionPane.showMessageDialog(null, "로그인완료");
                            setVisible(false);
                            human.setLocation(300,300);
                            human.setSize(1000,700);
                            human.setVisible(true);
                            stunum.setText(DBM.DB_rs.getString("userID"));
                            stubirth.setText(DBM.DB_rs.getString("userBirth"));
                            name.setText(DBM.DB_rs.getString("userName"));
                            studept.setText(DBM.DB_rs.getString("userJob"));
                            nowdate.setText(strToday);
                            nowtime1.setText(formatedNow);
                            sql ="select * from work where userID = " + DBM.DB_rs.getString("userID");
                            getDBData(sql);
                            break;
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "비밀번호가 틀립니다.");
                        }
                    } 
                }
                if(chk == 0){
                    JOptionPane.showMessageDialog(null, "아이디가 틀립니다.");
                }
            }
        DBM.dbClose();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"login failed");
            System.out.println("SQLException : "+e.getMessage());
        }
        
    }//GEN-LAST:event_btnokActionPerformed
    
    //로그인 페이지에서 회원가입 눌렀을 때 발생하는 함수
    private void btnjoinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnjoinActionPerformed
        JoinFrame.setLocation(300,300);
        JoinFrame.setSize(360,360);
        JoinFrame.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnjoinActionPerformed
    
    
    public static String SHA512(String password) { //암호화 해주는 메소드
		String salt = password;
		String hex = null;
		
		try {

			MessageDigest msg = MessageDigest.getInstance("SHA-512");
			msg.update(salt.getBytes());
			
			hex = String.format("%128x", new BigInteger(1, msg.digest()));
			
		} catch (NoSuchAlgorithmException e) {
			e.printStackTrace();
		}
		return hex;
	}
    
    
    //회원가입 페이지에서 회원가입 버튼 눌렀을 때 발생하는 함수
    private void btnjoinActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnjoinActionActionPerformed
        String pw = new String(password1.getPassword());
        String pw_encrypt = SHA512(pw);
        
        
        
        if(userID1.getText().isEmpty() ||  pw.isEmpty() || userName1.getText().isEmpty() || userBirth.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "입력칸을 확인해주세요.");
        }else{
            String strSQL = "INSERT INTO user VALUES ('";
            strSQL += userID1.getText() + "', '";
            strSQL += userName1.getText() + "', '";
            strSQL += pw_encrypt + "', '";
            strSQL += userBirth.getText() + "', '";
            strSQL += userJob.getSelectedItem().toString() + "')";

            try{
                DBM.dbOpen();
                DBM.DB_stmt.executeUpdate(strSQL);
                JOptionPane.showMessageDialog(null, "회원가입에 성공 하셨습니다.");
                DBM.dbClose();
                userID1.setText("");
                userName1.setText("");
                userBirth.setText("");
                password1.setText("");
                JoinFrame.setVisible(false);
                setVisible(true);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "회원가입에 실패 하셨습니다.");
                System.out.println("exception: "+e.getMessage());
            }
        }
        
    }//GEN-LAST:event_btnjoinActionActionPerformed
    
    //출근등록 눌렀을 때 발생하는 함수
    private void btnstartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnstartActionPerformed
        int iCntRow = 0;
        String istudept = stunum.getText();
        String ijob = studept.getText();
        String iname = name.getText();
        String inowdate = strToday;
        String inowtime = nowtime1.getText().substring(0, nowtime1.getText().length()-3);
        String iyoil = yoil;
        String sql ="select * from work where userID = " + istudept;
        if(!checkDate(inowdate).equals("no")){
            JOptionPane.showMessageDialog(null, "이미 출근 하셨습니다.");
        }else{
            sql =  "INSERT INTO WORK VALUES (?, ?, ?, ?, ?, ?, null, null)";
            iCntRow = total.getRowCount();
            for(int idx =0; idx < total.getRowCount(); idx++){
                if(total.getValueAt(idx, 0) == null){
                    iCntRow = idx;
                    break;
                }
            }
            try{

            DBM.dbOpen();
            PreparedStatement pstmt = DBM.DB_con.prepareStatement(sql); 
            pstmt.setString(1, istudept);
            pstmt.setString(2, ijob);
            pstmt.setString(3, iname);
            pstmt.setString(4, inowdate);
            pstmt.setString(5, iyoil);
            pstmt.setString(6, inowtime);

            pstmt.executeUpdate();

            }catch(Exception e ){
                System.out.println("SQLException : "+e.getMessage());
            }
        }
        sql ="select * from work where userID = " + istudept;
        getDBData(sql);
    }//GEN-LAST:event_btnstartActionPerformed
    
   
    // 시간 새로고침 함수
    private void retimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retimeActionPerformed
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
 
        Calendar c1 = Calendar.getInstance();
        String strToday = sdf.format(c1.getTime());

        LocalTime nowtime = LocalTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss");
        String formatedNow = nowtime.format(formatter);
        nowdate.setText(strToday);
        nowtime1.setText(formatedNow);
    }//GEN-LAST:event_retimeActionPerformed
    
    //퇴근버튼 눌렀을때 발생함
    private void btnstopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnstopActionPerformed
       int workTime;
       int hour1 = Integer.parseInt(nowtime1.getText().substring(0, 2));
       int min1 =  Integer.parseInt(nowtime1.getText().substring(3, 5));
       String istudept = stunum.getText();
       String startTime = checkDate(strToday);
       String time = strToday;
       String sql = "update work set endTime = ?, workTime = ? where workDate = ? AND userID = ?";   
       if(checkDate(strToday).equals("no")){
           JOptionPane.showMessageDialog(null, "아직 출근전입니다.");
       }else{
           int hour2 = Integer.parseInt(startTime.substring(0, 2));
           int min2 =  Integer.parseInt(startTime.substring(3, 5));
           workTime = hour1 - hour2;
           if(min2-min1<0){
               if(!(workTime ==0)){
                   workTime -=1;
               }
           }
           try{

            DBM.dbOpen();
            PreparedStatement pstmt = DBM.DB_con.prepareStatement(sql); 
            pstmt.setString(1, nowtime1.getText().substring(0, nowtime1.getText().length()-3));
            pstmt.setString(2, Integer.toString(workTime));
            pstmt.setString(3, time);
            pstmt.setString(4, istudept);

            pstmt.executeUpdate();

            }catch(Exception e ){
                System.out.println("SQLException : "+e.getMessage());
            }
       }
       sql ="select * from work where userID = " + istudept;
       getDBData(sql);
       
    }//GEN-LAST:event_btnstopActionPerformed
    //로그아웃버튼누를시
    private void btnlogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlogoutActionPerformed
        DefaultTableModel model = (DefaultTableModel)total.getModel();
        model.setNumRows(0);
        model.setNumRows(31);//테이블값 초기화
        hell.setVisible(false);
        userID.setText("");
        password.setText("");
        setVisible(true);
    }//GEN-LAST:event_btnlogoutActionPerformed
        
    private void humancheckbtn(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_humancheckbtn
        humancheckbtn.setVisible(false);
        answerinput.setVisible(true);
        humansubmit.setVisible(true);
       
        
        ImageIcon icon = new ImageIcon(num[i]+".jpg");
        humanchkimage.setIcon(icon);
        
        
    }//GEN-LAST:event_humancheckbtn

    private void submit(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit
         String answer = answerinput.getText();
        
            
        if(i == 0){
            if(answer.equals("호랑이")){
            JOptionPane.showMessageDialog(null, "로그인완료");
            human.setVisible(false);
            hell.setLocation(300,300);
            hell.setSize(700,700);
            hell.setVisible(true);
            
        }
        
        }
        
        if(i == 1){
            if(answer.equals("기린")){
                JOptionPane.showMessageDialog(null, "로그인완료");
                human.setVisible(false);
            hell.setLocation(300,300);
            hell.setSize(700,700);
            hell.setVisible(true);
            
        }
        
        }
        if(i == 2){
            if(answer.equals("기차")){
                JOptionPane.showMessageDialog(null, "로그인완료");
                human.setVisible(false);
            hell.setLocation(300,300);
            hell.setSize(700,700);
            hell.setVisible(true);
            
        
        }
        }
        if(i == 3){
            if(answer.equals("자동차")){
                JOptionPane.showMessageDialog(null, "로그인완료");
                human.setVisible(false);
            hell.setLocation(300,300);
            hell.setSize(700,700);
            hell.setVisible(true);
            
        }
        
        }
    }//GEN-LAST:event_submit

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(로그인.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(로그인.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(로그인.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(로그인.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new 로그인().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame JoinFrame;
    private javax.swing.JTextField answerinput;
    private javax.swing.JButton btnjoin;
    private javax.swing.JButton btnjoinAction;
    private javax.swing.JButton btnlogout;
    private javax.swing.JButton btnok;
    private javax.swing.JButton btnstart;
    private javax.swing.JButton btnstop;
    private javax.swing.JFrame hell;
    private javax.swing.JFrame human;
    private javax.swing.JButton humancheckbtn;
    private javax.swing.JLabel humanchkimage;
    private javax.swing.JButton humansubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField nowdate;
    private javax.swing.JTextField nowtime1;
    private javax.swing.JPasswordField password;
    private javax.swing.JPasswordField password1;
    private javax.swing.JButton retime;
    private javax.swing.JTextField stubirth;
    private javax.swing.JTextField studept;
    private javax.swing.JTextField stunum;
    private javax.swing.JTable total;
    private javax.swing.JTextField userBirth;
    private javax.swing.JTextField userID;
    private javax.swing.JTextField userID1;
    private javax.swing.JComboBox<String> userJob;
    private javax.swing.JTextField userName1;
    // End of variables declaration//GEN-END:variables
}
